name: "Build and Test"

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  matrix_build:
    name: "Matrix Build"
    runs-on:
      - ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 100
      matrix:
        spring_boot_version:
          - 2.7.6
          - 2.6.14
          - 2.5.14
    container:
      image: azul/zulu-openjdk:17
    env:
      SPRING_BOOT_VERSION: ${{ matrix.spring_boot_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: "Retrieve gradle settings"
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle
          key: gradle-v1-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties', '**/*.gradle*') }}
      - name: "Assemble jar"
        run: GRADLE_USER_HOME=$HOME/.gradle ./gradlew assemble --console=plain --no-daemon
      - name: "Run tests"
        run: GRADLE_USER_HOME=$HOME/.gradle ./gradlew check --console=plain --no-daemon --stacktrace
      - name: "Test if publishing works"
        run: GRADLE_USER_HOME=$HOME/.gradle ./gradlew publishToMavenLocal --console=plain --no-daemon --stacktrace
      - name: "Publish Test Report"
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          check_name: Test Report-(${{ matrix.spring_boot_version }})
          report_paths: 'build/test-results/**/*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          require_tests: true
      - name: Publish checkstyle report
        if: always()
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          name: Checkstyle Report-(${{ matrix.spring_boot_version }})
          path: 'build/reports/**/*.xml'
      - name: Publish spotbugs report
        if: failure()
        uses: jwgmeligmeyling/spotbugs-github-action@master
        with:
          name: Spotbugs Report-(${{ matrix.spring_boot_version }})
          path: 'build/reports/**/*.xml'
      - name: "Collect test reports"
        run: |
          tar -zcvf all-test-reports-${{ matrix.spring_boot_version }}.tar.gz build/reports
        if: always()
      - name: "Store test results"
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: all-test-reports-${{ matrix.spring_boot_version }}
          path: all-test-reports-${{ matrix.spring_boot_version }}.tar.gz
          retention-days: 7

  build:
    name: "Build and Test"
    if: always()
    runs-on:
      - ubuntu-latest
    needs: matrix_build
    container:
      image: azul/zulu-openjdk:17
    steps:
      # Needed hacks to properly fail the build when one matrix build fails.
      - name: Do something so that GHA is happy
        run: echo "Be happy!"
      - name: Verify matrix jobs succeeded
        if: ${{ needs.matrix_build.result != 'success' }}
        run: exit 1
      - name: "Bootstrap git config"
        if: github.ref == 'refs/heads/master'
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git config --global user.name "TW GitHub Actions" && git config --global user.email circle@circle.tw.ee
      - name: "Tag release"
        if: github.ref == 'refs/heads/master'
        run: GRADLE_USER_HOME=$HOME/.gradle ./gradlew tagRelease --console=plain --no-daemon