apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'checkstyle'

group = 'com.transferwise.common'

repositories {
    mavenCentral()
    mavenLocal()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    withSourcesJar()
    withJavadocJar()
}

jar {
    manifest {
        attributes(
                "Implementation-Title": projectName,
                "Implementation-Version": archiveVersion
        )
    }
}

def lombok = 'org.projectlombok:lombok:1.18.22'

dependencies {
    annotationProcessor lombok
    compileOnly lombok
    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.5.2'

    testAnnotationProcessor lombok
    testCompileOnly lombok
    testCompileOnly 'com.github.spotbugs:spotbugs-annotations:4.5.2'
}

compileJava {
    options.encoding = 'utf-8'
    options.compilerArgs << '-parameters'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = projectArtifactName

            pom {
                name = projectName
                description = projectDescription
                url = "https://github.com/transferwise/${projectGitHubRepoName}"
                packaging = "jar"
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0, Copyright 2021 TransferWise Ltd'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'onukristo'
                        name = 'Kristo KuuskÃ¼ll'
                        email = "kristo.kuuskull@transferwise.com"
                        organization = "Transferwise Ltd"
                        organizationUrl = "https://github.com/transferwise"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/transferwise/${projectGitHubRepoName}.git"
                    developerConnection = "scm:git:ssh://github.com:transferwise/${projectGitHubRepoName}.git"
                    url = "https://github.com/transferwise/${projectGitHubRepoName}"
                }
            }
        }
    }

    if (System.getenv("OSS_SIGNING_KEY")) {
        signing {
            useInMemoryPgpKeys(System.getenv("OSS_SIGNING_KEY"), System.getenv("OSS_SIGNING_PASSWORD"))
            sign publishing.publications.mavenJava
        }
    }

    repositories {
        maven {
            url System.getenv("MAVEN_URL")
            credentials {
                username = System.getenv("MAVEN_USER")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardError"
        showStackTraces = true
        exceptionFormat = 'full'
    }
}

tasks.findAll { it.name.startsWith("spotbugs") }*.configure {
    effort = "max"
    excludeFilter = file('spotbugs-exclude.xml')
    reports {
        xml.required = true
        html.enabled = true
    }
}

spotbugs {
    spotbugsTest.enabled = false
}

tasks.withType(Checkstyle) {
    config = resources.text.fromFile(file('google_checks.xml'))

    maxWarnings = 0

    reports {
        xml.required = true
        html.required = true
    }
}
